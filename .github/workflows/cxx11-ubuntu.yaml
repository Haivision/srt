name: cxx11

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: ubuntu
    runs-on: ubuntu-20.04
    env:
      BUILD_WRAPPER_OUT_DIR: sonar-output # Directory where build-wrapper output will be placed
    steps:
    - uses: actions/checkout@v3
    - name: Install sonar-scanner and build-wrapper
      uses: sonarsource/sonarcloud-github-c-cpp@v2
    - name: configure
      run: |
        mkdir _build && cd _build
        cmake ../ -DENABLE_STDCXX_SYNC=ON -DENABLE_ENCRYPTION=ON -DENABLE_UNITTESTS=ON -DENABLE_BONDING=ON -DENABLE_TESTING=ON -DENABLE_EXAMPLES=ON -DENABLE_CODE_COVERAGE=ON
    - name: build
      run: cd _build && build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build .
    - name: test
      run: |
        cd _build && ctest --extra-verbose
    - name: codecov
      run: |
        source ./scripts/collect-gcov.sh
        bash <(curl -s https://codecov.io/bash)
    - name: Run SonarCloud Scan for C and C++
      if: ${{ !github.event.pull_request.head.repo.fork }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Consult https://docs.sonarcloud.io/advanced-setup/ci-based-analysis/sonarscanner-cli/ for more information and options.
      run: sonar-scanner --define sonar.cfamily.build-wrapper-output=_build/"${{ env.BUILD_WRAPPER_OUT_DIR }}"
