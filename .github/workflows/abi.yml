name: ABI checks

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  SRT_BASE: v1.5.0

jobs:
  build_pr:
    name: Build current version
    runs-on: ubuntu-20.04

    outputs:
       SRT_BASE: ${{ steps.commands.outputs.SRT_BASE }}
    steps:
    - uses: actions/checkout@v3
      with:
        path: gitview_pr
    - name: configure
      run: |
        cd gitview_pr
        mkdir _build && cd _build
        cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_UNITTESTS=ON ../
    - name: build
      run: |
        sudo apt install -y abi-dumper
        sudo apt install -y tcl
        cd gitview_pr/_build && cmake --build ./
        make install DESTDIR=./installdir
        SRT_TAG_VERSION=v$(../scripts/get-build-version.tcl full)
        SRT_TAG=${SRT_TAG_VERSION}dev-$(git rev-parse --short HEAD)
        abi-dumper libsrt.so -o libsrt-pr.dump -public-headers installdir/usr/local/include/srt/ -lver $SRT_TAG
        SRT_BASE=v$(../scripts/get-build-version.tcl base)
        if [[ $SRT_TAG_VERSION == $SRT_BASE ]]; then
            echo "NOT CHECKING ABI: base version is being built: $SRT_TAG"
            echo "SRT_BASE=''" >> "$GITHUB_OUTPUT"
            exit 0
        fi
        echo "SRT_BASE=$SRT_BASE" >> "$GITHUB_OUTPUT"

  build_base:
    name: Build base version
    runs-on: ubuntu-20.04
    needs: build_pr
    if: ${{ needs.build_pr.outputs.SRT_BASE != '' }}

    env:
       SRT_BASE: ${{ needs.build_pr.outputs.SRT_BASE }}
    steps:
    - uses: actions/checkout@v3
      with:
        path: gitview_base
        ref: ${{ env.SRT_BASE }}
    - name: configure_tag
      run: |
        echo $SRT_TAG_VERSION
        cd gitview_base
        mkdir _build && cd _build
        cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_UNITTESTS=ON ../
    - name: build_tag
      run: |
        cd gitview_base      
        cd _build && cmake --build ./
        make install DESTDIR=./installdir
        abi-dumper libsrt.so -o libsrt-base.dump -public-headers installdir/usr/local/include/srt/ -lver $SRT_BASE

  check_abi:
    name: Compare ABI
    runs-on: ubuntu-20.04
    needs: [build_pr, build_base]
    env:
       SRT_BASE: ${{ needs.build_pr.outputs.SRT_BASE }}

    steps:
    - name: abi-check
      run: |
        #git clone https://github.com/lvc/abi-compliance-checker.git
        cd gitview_pr/submodules
        git submodule update --init abi-compliance-checker
        cd abi-compliance-checker && sudo make install && cd ../
        cd ../..
        abi-compliance-checker -l libsrt -old gitview_base/_build/libsrt-base.dump -new gitview_pr/_build/libsrt-pr.dump
        RES=$?
        if (( $RES != 0 )); then
           echo "ABI/API Compatibility check failed with value $?"
           exit $RES
        fi
    - name: Download report
      uses: actions/download-artifact@v4
      with:
        path: compat_reports
